name: Release

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: nightly
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  tagname:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag.outputs.tag }}
    steps:
      - if: github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

      - if: github.event_name == 'schedule'
        run: echo 'TAG_NAME=nightly' >> $GITHUB_ENV

      - if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV

      - id: vars
        shell: bash
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - if: env.TAG_NAME == 'nightly'
        run: echo 'TAG_NAME=nightly-${{ steps.vars.outputs.sha_short }}' >> $GITHUB_ENV

      - id: tag
        run: echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
  
  windows:
    runs-on: windows-latest
    needs: tagname
    env:
      RELEASE_TAG_NAME: ${{ needs.tagname.outputs.tag_name }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Update rust
        run: rustup update

      - name: Build
        run: cargo build --profile release-lto

      - name: Install WiX
        run: nuget install WiX

      - name: Crate msi installer
        run: |
          ./WiX.*/tools/candle.exe -arch "x64" -ext WixUIExtension -ext WixUtilExtension \
            -out "./lapce.wixobj" "extra/windows/wix/lapce.wxs"
          ./WiX.*/tools/light.exe -ext WixUIExtension -ext WixUtilExtension \
            -out "./Lapce-windows.msi" -sice:ICE61 -sice:ICE91 \
            "./lapce.wixobj"

      - name: Create portable
        shell: pwsh
        run: |
          cargo build --profile release-lto --features lapce-ui/portable
          Compress-Archive ./target/release-lto/lapce.exe ./Lapce-windows-portable.zip

      - name: Create lapce-proxy archive
        shell: pwsh
        run: |
          $file = [System.IO.File]::Open((Join-Path $PWD '.\target\release-lto\lapce-proxy.exe'), [System.IO.FileMode]::Open)
          $archive = [System.IO.File]::Create((Join-Path $PWD '.\lapce-proxy-windows-x86_64.gz'))
          $compressor = [System.IO.Compression.GZipStream]::new($archive, [System.IO.Compression.CompressionMode]::Compress)
          $file.CopyTo($compressor)
          Start-Sleep -Seconds 10
          $compressor.close()

      - uses: actions/upload-artifact@v3
        with:
          name: lapce-windows
          path: |
            ./lapce-proxy-windows-*.gz
            ./Lapce-windows-portable.zip
            ./Lapce-windows.msi
          retention-days: 1
